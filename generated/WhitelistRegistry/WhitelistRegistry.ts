// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class WhitelistRegistryOwnershipTransferred extends ethereum.Event {
  get params(): WhitelistRegistryOwnershipTransferred__Params {
    return new WhitelistRegistryOwnershipTransferred__Params(this);
  }
}

export class WhitelistRegistryOwnershipTransferred__Params {
  _event: WhitelistRegistryOwnershipTransferred;

  constructor(event: WhitelistRegistryOwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Promotion extends ethereum.Event {
  get params(): Promotion__Params {
    return new Promotion__Params(this);
  }
}

export class Promotion__Params {
  _event: Promotion;

  constructor(event: Promotion) {
    this._event = event;
  }

  get promoter(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get chainId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get promotee(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Registered extends ethereum.Event {
  get params(): Registered__Params {
    return new Registered__Params(this);
  }
}

export class Registered__Params {
  _event: Registered;

  constructor(event: Registered) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ResolverThresholdSet extends ethereum.Event {
  get params(): ResolverThresholdSet__Params {
    return new ResolverThresholdSet__Params(this);
  }
}

export class ResolverThresholdSet__Params {
  _event: ResolverThresholdSet;

  constructor(event: ResolverThresholdSet) {
    this._event = event;
  }

  get resolverThreshold(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Unregistered extends ethereum.Event {
  get params(): Unregistered__Params {
    return new Unregistered__Params(this);
  }
}

export class Unregistered__Params {
  _event: Unregistered;

  constructor(event: Unregistered) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class WhitelistLimitSet extends ethereum.Event {
  get params(): WhitelistLimitSet__Params {
    return new WhitelistLimitSet__Params(this);
  }
}

export class WhitelistLimitSet__Params {
  _event: WhitelistLimitSet;

  constructor(event: WhitelistLimitSet) {
    this._event = event;
  }

  get whitelistLimit(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class WhitelistRegistry extends ethereum.SmartContract {
  static bind(address: Address): WhitelistRegistry {
    return new WhitelistRegistry("WhitelistRegistry", address);
  }

  getPromotees(chainId: BigInt): Array<Address> {
    let result = super.call(
      "getPromotees",
      "getPromotees(uint256):(address[])",
      [ethereum.Value.fromUnsignedBigInt(chainId)]
    );

    return result[0].toAddressArray();
  }

  try_getPromotees(chainId: BigInt): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getPromotees",
      "getPromotees(uint256):(address[])",
      [ethereum.Value.fromUnsignedBigInt(chainId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getWhitelist(): Array<Address> {
    let result = super.call("getWhitelist", "getWhitelist():(address[])", []);

    return result[0].toAddressArray();
  }

  try_getWhitelist(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getWhitelist",
      "getWhitelist():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  promotions(param0: Address, param1: BigInt): Address {
    let result = super.call(
      "promotions",
      "promotions(address,uint256):(address)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toAddress();
  }

  try_promotions(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "promotions",
      "promotions(address,uint256):(address)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  resolverThreshold(): BigInt {
    let result = super.call(
      "resolverThreshold",
      "resolverThreshold():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_resolverThreshold(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "resolverThreshold",
      "resolverThreshold():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  token(): Address {
    let result = super.call("token", "token():(address)", []);

    return result[0].toAddress();
  }

  try_token(): ethereum.CallResult<Address> {
    let result = super.tryCall("token", "token():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  whitelistLimit(): BigInt {
    let result = super.call("whitelistLimit", "whitelistLimit():(uint256)", []);

    return result[0].toBigInt();
  }

  try_whitelistLimit(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "whitelistLimit",
      "whitelistLimit():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get token_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get resolverThreshold_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get whitelistLimit_(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CleanCall extends ethereum.Call {
  get inputs(): CleanCall__Inputs {
    return new CleanCall__Inputs(this);
  }

  get outputs(): CleanCall__Outputs {
    return new CleanCall__Outputs(this);
  }
}

export class CleanCall__Inputs {
  _call: CleanCall;

  constructor(call: CleanCall) {
    this._call = call;
  }
}

export class CleanCall__Outputs {
  _call: CleanCall;

  constructor(call: CleanCall) {
    this._call = call;
  }
}

export class PromoteCall extends ethereum.Call {
  get inputs(): PromoteCall__Inputs {
    return new PromoteCall__Inputs(this);
  }

  get outputs(): PromoteCall__Outputs {
    return new PromoteCall__Outputs(this);
  }
}

export class PromoteCall__Inputs {
  _call: PromoteCall;

  constructor(call: PromoteCall) {
    this._call = call;
  }

  get chainId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get promotee(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class PromoteCall__Outputs {
  _call: PromoteCall;

  constructor(call: PromoteCall) {
    this._call = call;
  }
}

export class RegisterCall extends ethereum.Call {
  get inputs(): RegisterCall__Inputs {
    return new RegisterCall__Inputs(this);
  }

  get outputs(): RegisterCall__Outputs {
    return new RegisterCall__Outputs(this);
  }
}

export class RegisterCall__Inputs {
  _call: RegisterCall;

  constructor(call: RegisterCall) {
    this._call = call;
  }
}

export class RegisterCall__Outputs {
  _call: RegisterCall;

  constructor(call: RegisterCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RescueFundsCall extends ethereum.Call {
  get inputs(): RescueFundsCall__Inputs {
    return new RescueFundsCall__Inputs(this);
  }

  get outputs(): RescueFundsCall__Outputs {
    return new RescueFundsCall__Outputs(this);
  }
}

export class RescueFundsCall__Inputs {
  _call: RescueFundsCall;

  constructor(call: RescueFundsCall) {
    this._call = call;
  }

  get token_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RescueFundsCall__Outputs {
  _call: RescueFundsCall;

  constructor(call: RescueFundsCall) {
    this._call = call;
  }
}

export class SetResolverThresholdCall extends ethereum.Call {
  get inputs(): SetResolverThresholdCall__Inputs {
    return new SetResolverThresholdCall__Inputs(this);
  }

  get outputs(): SetResolverThresholdCall__Outputs {
    return new SetResolverThresholdCall__Outputs(this);
  }
}

export class SetResolverThresholdCall__Inputs {
  _call: SetResolverThresholdCall;

  constructor(call: SetResolverThresholdCall) {
    this._call = call;
  }

  get resolverThreshold_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetResolverThresholdCall__Outputs {
  _call: SetResolverThresholdCall;

  constructor(call: SetResolverThresholdCall) {
    this._call = call;
  }
}

export class SetWhitelistLimitCall extends ethereum.Call {
  get inputs(): SetWhitelistLimitCall__Inputs {
    return new SetWhitelistLimitCall__Inputs(this);
  }

  get outputs(): SetWhitelistLimitCall__Outputs {
    return new SetWhitelistLimitCall__Outputs(this);
  }
}

export class SetWhitelistLimitCall__Inputs {
  _call: SetWhitelistLimitCall;

  constructor(call: SetWhitelistLimitCall) {
    this._call = call;
  }

  get whitelistLimit_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetWhitelistLimitCall__Outputs {
  _call: SetWhitelistLimitCall;

  constructor(call: SetWhitelistLimitCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
